var searchIndex = JSON.parse('{\
"test_cat":{"doc":"A cat-like utility that can be used as a subprocess to…","i":[[5,"main","test_cat","",null,[[]]]],"p":[]},\
"tests_build":{"doc":"","i":[],"p":[]},\
"tests_integration":{"doc":"","i":[],"p":[]},\
"tokio":{"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio","Marks async function to be executed by selected runtime.",null,null],[23,"test","","Marks async function to be executed by runtime, suitable…",null,null],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[],["joinhandle",3]]],[0,"fs","","Asynchronous file and standard stream adaptation.",null,null],[3,"DirBuilder","tokio::fs","A builder for creating directories in various manners.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"DirEntry","","Entries returned by the [`ReadDir`] stream.",null,null],[3,"ReadDir","","Stream of the entries in a directory.",null,null],[5,"canonicalize","","Returns the canonical, absolute form of a path with all…",null,[[]]],[5,"create_dir","","Creates a new, empty directory at the provided path",null,[[]]],[5,"create_dir_all","","Recursively creates a directory and all of its parent…",null,[[]]],[5,"hard_link","","Creates a new hard link on the filesystem.",null,[[]]],[5,"metadata","","Given a path, queries the file system to get information…",null,[[]]],[5,"read","","Reads the entire contents of a file into a bytes vector.",null,[[]]],[5,"read_dir","","Returns a stream over the entries within a directory.",null,[[]]],[5,"read_link","","Reads a symbolic link, returning the file that the link…",null,[[]]],[5,"read_to_string","","Creates a future which will open a file for reading and…",null,[[]]],[5,"remove_dir","","Removes an existing, empty directory.",null,[[]]],[5,"remove_dir_all","","Removes a directory at this path, after removing all its…",null,[[]]],[5,"remove_file","","Removes a file from the filesystem.",null,[[]]],[5,"rename","","Renames a file or directory to a new name, replacing the…",null,[[]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,[[["permissions",3]]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",null,[[]]],[5,"write","","Creates a future that will open a file for writing and…",null,[[["asref",8],["unpin",8]]]],[5,"copy","","Copies the contents of one file to another. This function…",null,[[["asref",8],["path",3]]]],[11,"new","","Creates a new set of options with default mode/security…",0,[[]]],[11,"recursive","","Indicates whether to create directories recursively…",0,[[]]],[11,"create","","Creates the specified directory with the configured options.",0,[[["asref",8],["path",3]]]],[11,"open","","Attempts to open a file in read-only mode.",1,[[]]],[11,"create","","Opens a file in write-only mode.",1,[[]]],[11,"from_std","","Converts a [`std::fs::File`][std] to a…",1,[[["file",3]],["file",3]]],[11,"seek","","Seeks to an offset, in bytes, in a stream.",1,[[["seekfrom",4]]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",1,[[]]],[11,"sync_data","","This function is similar to `sync_all`, except that it may…",1,[[]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",1,[[]]],[11,"metadata","","Queries metadata about the underlying file.",1,[[]]],[11,"try_clone","","Create a new `File` instance that shares the same…",1,[[]]],[11,"into_std","","Destructures `File` into a [`std::fs::File`][std]. This…",1,[[]]],[11,"try_into_std","","Tries to immediately destructure `File` into a…",1,[[],[["result",4],["file",3]]]],[11,"set_permissions","","Changes the permissions on the underlying file.",1,[[["permissions",3]]]],[11,"new","","Creates a blank new set of options ready for configuration.",2,[[],["openoptions",3]]],[11,"read","","Sets the option for read access.",2,[[],["openoptions",3]]],[11,"write","","Sets the option for write access.",2,[[],["openoptions",3]]],[11,"append","","Sets the option for the append mode.",2,[[],["openoptions",3]]],[11,"truncate","","Sets the option for truncating a previous file.",2,[[],["openoptions",3]]],[11,"create","","Sets the option for creating a new file.",2,[[],["openoptions",3]]],[11,"create_new","","Sets the option to always create a new file.",2,[[],["openoptions",3]]],[11,"open","","Opens a file at `path` with the options specified by `self`.",2,[[]]],[0,"os","","OS-specific functionality.",null,null],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",null,null],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",null,[[]]],[8,"OpenOptionsExt","","Unix-specific extensions to [`fs::OpenOptions`].",null,null],[10,"mode","","Sets the mode bits that a new file will be created with.",3,[[]]],[10,"custom_flags","","Pass custom flags to the `flags` argument of `open`.",3,[[]]],[8,"DirBuilderExt","","Unix-specific extensions to [`DirBuilder`].",null,null],[10,"mode","","Sets the mode to create new directories with.",4,[[]]],[11,"next_entry","tokio::fs","Returns the next entry in the directory stream.",5,[[]]],[11,"path","","Returns the full path to the file that this entry…",6,[[],["pathbuf",3]]],[11,"file_name","","Returns the bare file name of this directory entry without…",6,[[],["osstring",3]]],[11,"metadata","","Returns the metadata for the file that this entry points at.",6,[[]]],[11,"file_type","","Returns the file type for the file that this entry points…",6,[[]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous I/O…",null,null],[3,"Error","tokio::io","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",7,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",7,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",7,null],[13,"ConnectionReset","","The connection was reset by the remote server.",7,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",7,null],[13,"NotConnected","","The network operation failed because it was not connected…",7,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",7,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",7,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",7,null],[13,"AlreadyExists","","An entity already exists, often a file.",7,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",7,null],[13,"InvalidInput","","A parameter was incorrect.",7,null],[13,"InvalidData","","Data not valid for the operation were encountered.",7,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be…",7,null],[13,"WriteZero","","An error returned when an operation could not be completed…",7,null],[13,"Interrupted","","This operation was interrupted.",7,null],[13,"Other","","Any I/O error not part of this list.",7,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",7,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[3,"PollEvented","","Associates an I/O resource that implements the…",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that…",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[3,"ReadHalf","","The readable half of a value returned from `split`.",null,null],[3,"WriteHalf","","The writable half of a value returned from `split`.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufStream","","Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Copy","","A future that asynchronously copies the entire contents of…",null,null],[3,"Empty","","An async reader which is always at EOF.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Repeat","","An async reader which yields one byte over and over and…",null,null],[3,"Sink","","An async writer which will move data into the void.",null,null],[3,"Split","","Stream for the `split` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"StreamReader","","Convert a stream of byte chunks into an [`AsyncRead`].",null,null],[5,"stderr","","Constructs a new handle to the standard error of the…",null,[[],["stderr",3]]],[5,"stdin","","Constructs a new handle to the standard input of the…",null,[[],["stdin",3]]],[5,"stdout","","Constructs a new handle to the standard output of the…",null,[[],["stdout",3]]],[5,"split","","Splits a single value implementing `AsyncRead +…",null,[[]]],[5,"copy","","Asynchronously copies the entire contents of a reader into…",null,[[],[["copy",3],["sized",8]]]],[5,"empty","","Creates a new empty async reader.",null,[[],["empty",3]]],[5,"repeat","","Creates an instance of an async reader that infinitely…",null,[[],["repeat",3]]],[5,"sink","","Creates an instance of an async writer which will…",null,[[],["sink",3]]],[5,"stream_reader","","Convert a stream of byte chunks into an `AsyncRead`.",null,[[],["streamreader",3]]],[11,"new","","Creates a new `PollEvented` associated with the default…",8,[[],["result",6]]],[11,"new_with_ready","","Creates a new `PollEvented` associated with the default…",8,[[["ready",3]],["result",6]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",8,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",8,[[]]],[11,"into_inner","","Consumes self, returning the inner I/O object",8,[[],["result",6]]],[11,"poll_read_ready","","Checks the I/O resource\'s read readiness state.",8,[[["context",3],["ready",3]],[["result",6],["poll",4]]]],[11,"clear_read_ready","","Clears the I/O resource\'s read readiness state and…",8,[[["context",3],["ready",3]],["result",6]]],[11,"poll_write_ready","","Checks the I/O resource\'s write readiness state.",8,[[["context",3]],[["result",6],["poll",4]]]],[11,"clear_write_ready","","Resets the I/O resource\'s write readiness state and…",8,[[["context",3]],["result",6]]],[11,"new","","Registers the I/O resource with the default reactor.",9,[[],[["registration",3],["result",6]]]],[11,"new_with_ready","","Registers the I/O resource with the default reactor, for a…",9,[[["ready",3]],[["registration",3],["result",6]]]],[11,"deregister","","Deregisters the I/O resource from the reactor it is…",9,[[],["result",6]]],[11,"poll_read_ready","","Polls for events on the I/O resource\'s read readiness…",9,[[["context",3]],[["result",6],["poll",4]]]],[11,"take_read_ready","","Consume any pending read readiness event.",9,[[],[["result",6],["option",4]]]],[11,"poll_write_ready","","Polls for events on the I/O resource\'s write readiness…",9,[[["context",3]],[["result",6],["poll",4]]]],[11,"take_write_ready","","Consumes any pending write readiness event.",9,[[],[["result",6],["option",4]]]],[11,"is_pair_of","","Checks if this `ReadHalf` and some `WriteHalf` were split…",10,[[["writehalf",3]]]],[11,"unsplit","","Reunites with a previously split `WriteHalf`.",10,[[["writehalf",3]]]],[11,"is_pair_of","","Check if this `WriteHalf` and some `ReadHalf` were split…",11,[[["readhalf",3]]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",12,[[]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",12,[[]]],[11,"get_ref","","Gets a reference to the underlying reader.",12,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",12,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",12,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this `BufReader`, returning the underlying reader.",12,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",12,[[]]],[11,"new","","Wraps a type in both [`BufWriter`] and [`BufReader`].",13,[[],["bufstream",3]]],[11,"with_capacity","","Creates a `BufStream` with the specified [`BufReader`]…",13,[[],["bufstream",3]]],[11,"get_ref","","Gets a reference to the underlying I/O object.",13,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying I/O object.",13,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying I/O…",13,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this `BufStream`, returning the underlying I/O…",13,[[]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",14,[[]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",14,[[]]],[11,"get_ref","","Gets a reference to the underlying writer.",14,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",14,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",14,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",14,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",14,[[]]],[11,"next_line","","Returns the next line in the stream.",15,[[]]],[11,"get_mut","","Obtain a mutable reference to the underlying reader",15,[[]]],[11,"get_ref","","Obtain a reference to the underlying reader",15,[[]]],[11,"into_inner","","Unwraps this `Lines<R>`, returning the underlying reader.",15,[[]]],[11,"next_segment","","Returns the next segment in the stream.",16,[[]]],[11,"limit","","Returns the remaining number of bytes that can be read…",17,[[]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",17,[[]]],[11,"get_ref","","Gets a reference to the underlying reader.",17,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",17,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",17,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",17,[[]]],[8,"AsyncBufRead","","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",18,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",18,[[["pin",3]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",19,[[]]],[10,"poll_read","","Attempts to read from the `AsyncRead` into `buf`.",19,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",19,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"start_seek","","Attempts to seek to an offset, in bytes, in a stream.",20,[[["context",3],["seekfrom",4],["pin",3]],[["result",6],["poll",4]]]],[10,"poll_complete","","Waits for a seek operation to complete.",20,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Reads all bytes into `buf` until the delimiter `byte` or…",22,[[["vec",3]],["readuntil",3]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is reached,…",22,[[["string",3]],["readline",3]]],[11,"split","","Returns a stream of the contents of this reader split on…",22,[[],["split",3]]],[11,"lines","","Returns a stream over the lines of this reader. This…",22,[[],["lines",3]]],[8,"AsyncReadExt","","Reads bytes from a source.",null,null],[11,"chain","","Creates a new `AsyncRead` instance that chains this stream…",23,[[],["chain",3]]],[11,"read","","Pulls some bytes from this source into the specified…",23,[[],["read",3]]],[11,"read_buf","","Pulls some bytes from this source into the specified…",23,[[],["readbuf",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill `buf`.",23,[[],["readexact",3]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",23,[[],["readu8",3]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",23,[[],["readi8",3]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from…",23,[[],["readu16",3]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",23,[[],["readi16",3]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from…",23,[[],["readu32",3]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",23,[[],["readi32",3]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from…",23,[[],["readu64",3]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from…",23,[[],["readi64",3]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order from…",23,[[],["readu128",3]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from…",23,[[],["readi128",3]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them…",23,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them…",23,[[["string",3]],["readtostring",3]]],[11,"take","","Creates an adaptor which reads at most `limit` bytes from…",23,[[],["take",3]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",24,[[["seekfrom",4]],["seek",3]]],[8,"AsyncWriteExt","","Writes bytes to a sink.",null,null],[11,"write","","Writes a buffer into this writer, returning how many bytes…",25,[[],["write",3]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer\'s…",25,[[],["writebuf",3]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",25,[[],["writeall",3]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[],["writeu8",3]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[],["writei8",3]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to…",25,[[],["writeu16",3]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the…",25,[[],["writei16",3]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to…",25,[[],["writeu32",3]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the…",25,[[],["writei32",3]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to…",25,[[],["writeu64",3]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",25,[[],["writei64",3]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to…",25,[[],["writeu128",3]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to…",25,[[],["writei128",3]]],[11,"flush","","Flushes this output stream, ensuring that all…",25,[[],["flush",3]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can…",25,[[],["shutdown",3]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",null,null],[3,"TcpListener","tokio::net","A TCP socket server, listening for connections.",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[3,"UdpSocket","","A UDP socket",null,null],[3,"UnixDatagram","","An I/O object representing a Unix datagram socket.",null,null],[3,"UnixListener","","A Unix socket which can accept connections from other Unix…",null,null],[3,"UnixStream","","A structure representing a connected Unix socket.",null,null],[5,"lookup_host","","Performs a DNS resolution.",null,[[]]],[0,"tcp","","TCP utility types",null,null],[3,"Incoming","tokio::net::tcp","Stream returned by the `TcpListener::incoming` function…",null,null],[3,"ReadHalf","","Read half of a [`TcpStream`], created by [`split`].",null,null],[3,"WriteHalf","","Write half of a [`TcpStream`], created by [`split`].",null,null],[3,"OwnedReadHalf","","Owned read half of a [`TcpStream`], created by…",null,null],[3,"OwnedWriteHalf","","Owned write half of a [`TcpStream`], created by…",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same socket,…",null,null],[12,"0","","",26,null],[12,"1","","",26,null],[11,"bind","tokio::net","Creates a new TcpListener which will be bound to the…",27,[[["tosocketaddrs",8]]]],[11,"accept","","Accepts a new incoming connection from this listener.",27,[[]]],[11,"poll_accept","","Attempts to poll `SocketAddr` and `TcpStream` bound to…",27,[[["context",3]],[["poll",4],["result",6]]]],[11,"from_std","","Creates a new TCP listener from the standard library\'s TCP…",27,[[["tcplistener",3]],[["result",6],["tcplistener",3]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",27,[[],[["result",6],["socketaddr",4]]]],[11,"incoming","","Returns a stream over the connections being received on…",27,[[],["incoming",3]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",27,[[],["result",6]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",27,[[],["result",6]]],[11,"poll_accept","tokio::net::tcp","Attempts to poll `TcpStream` by polling inner…",28,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",29,[[["context",3]],[["result",6],["poll",4]]]],[11,"peek","","Receives data on the socket from the remote address to…",29,[[]]],[11,"reunite","","Attempts to put the two halves of a `TcpStream` back…",30,[[["ownedwritehalf",3]],[["result",4],["tcpstream",3],["reuniteerror",3]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",30,[[["context",3]],[["result",6],["poll",4]]]],[11,"peek","","Receives data on the socket from the remote address to…",30,[[]]],[11,"reunite","","Attempts to put the two halves of a `TcpStream` back…",31,[[["ownedreadhalf",3]],[["result",4],["tcpstream",3],["reuniteerror",3]]]],[11,"forget","","Destroy the write half, but don\'t close the stream until…",31,[[]]],[11,"connect","tokio::net","Opens a TCP connection to a remote host.",32,[[["tosocketaddrs",8]]]],[11,"from_std","","Creates new `TcpStream` from a `std::net::TcpStream`.",32,[[["tcpstream",3]],[["result",6],["tcpstream",3]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",32,[[],[["result",6],["socketaddr",4]]]],[11,"peer_addr","","Returns the remote address that this stream is connected to.",32,[[],[["result",6],["socketaddr",4]]]],[11,"poll_peek","","Attempts to receive data on the socket, without removing…",32,[[["context",3]],[["result",6],["poll",4]]]],[11,"peek","","Receives data on the socket from the remote address to…",32,[[]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",32,[[["shutdown",4]],["result",6]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",32,[[],["result",6]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",32,[[],["result",6]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",32,[[],["result",6]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",32,[[],["result",6]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",32,[[],["result",6]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",32,[[],["result",6]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",32,[[],[["result",6],["option",4]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",32,[[["option",4],["duration",3]],["result",6]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",32,[[],["result",6]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",32,[[],["result",6]]],[11,"linger","","Reads the linger duration for this socket by getting the…",32,[[],[["result",6],["option",4]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",32,[[["option",4],["duration",3]],["result",6]]],[11,"split","","Splits a `TcpStream` into a read half and a write half,…",32,[[]]],[11,"into_split","","Splits a `TcpStream` into a read half and a write half,…",32,[[]]],[0,"udp","","UDP utility types.",null,null],[3,"RecvHalf","tokio::net::udp","The recv half after `split`.",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same socket,…",null,null],[12,"0","","",33,null],[12,"1","","",33,null],[3,"SendHalf","","The send half after `split`.",null,null],[11,"bind","tokio::net","This function will create a new UDP socket and attempt to…",34,[[["tosocketaddrs",8]]]],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket…",34,[[["udpsocket",3]],[["result",6],["udpsocket",3]]]],[11,"split","","Splits the `UdpSocket` into a receive half and a send…",34,[[]]],[11,"local_addr","","Returns the local address that this socket is bound to.",34,[[],[["result",6],["socketaddr",4]]]],[11,"connect","","Connects the UDP socket setting the default destination…",34,[[["tosocketaddrs",8]]]],[11,"send","","Returns a future that sends data on the socket to the…",34,[[]]],[11,"recv","","Returns a future that receives a single datagram message…",34,[[]]],[11,"send_to","","Returns a future that sends data on the socket to the…",34,[[["tosocketaddrs",8]]]],[11,"recv_from","","Returns a future that receives a single datagram on the…",34,[[]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",34,[[],["result",6]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",34,[[],["result",6]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",34,[[],["result",6]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",34,[[],["result",6]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",34,[[],["result",6]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",34,[[],["result",6]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",34,[[],["result",6]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",34,[[],["result",6]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",34,[[],["result",6]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",34,[[],["result",6]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",34,[[["ipv4addr",3]],["result",6]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",34,[[["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",34,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",34,[[["ipv6addr",3]],["result",6]]],[11,"reunite","tokio::net::udp","Attempts to put the two \\\"halves\\\" of a `UdpSocket` back…",35,[[["sendhalf",3]],[["result",4],["udpsocket",3],["reuniteerror",3]]]],[11,"recv_from","","Returns a future that receives a single datagram on the…",35,[[]]],[11,"recv","","Returns a future that receives a single datagram message…",35,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a `UdpSocket` back…",36,[[["recvhalf",3]],[["result",4],["udpsocket",3],["reuniteerror",3]]]],[11,"send_to","","Returns a future that sends data on the socket to the…",36,[[["socketaddr",4]]]],[11,"send","","Returns a future that sends data on the socket to the…",36,[[]]],[0,"unix","tokio::net","Unix domain socket utility types",null,null],[3,"Incoming","tokio::net::unix","Stream of listeners",null,null],[3,"ReadHalf","","Read half of a `UnixStream`.",null,null],[3,"WriteHalf","","Write half of a `UnixStream`.",null,null],[3,"UCred","","Credentials of a process",null,null],[12,"uid","","UID (user ID) of the process",37,null],[12,"gid","","GID (group ID) of the process",37,null],[11,"bind","tokio::net","Creates a new `UnixDatagram` bound to the specified path.",38,[[],[["result",6],["unixdatagram",3]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",38,[[],["result",6]]],[11,"from_std","","Consumes a `UnixDatagram` in the standard library and…",38,[[["unixdatagram",3]],[["result",6],["unixdatagram",3]]]],[11,"unbound","","Creates a new `UnixDatagram` which is not bound to any…",38,[[],[["result",6],["unixdatagram",3]]]],[11,"connect","","Connects the socket to the specified address.",38,[[["asref",8],["path",3]],["result",6]]],[11,"send","","Sends data on the socket to the socket\'s peer.",38,[[]]],[11,"recv","","Receives data from the socket.",38,[[]]],[11,"send_to","","Sends data on the socket to the specified address.",38,[[]]],[11,"recv_from","","Receives data from the socket.",38,[[]]],[11,"local_addr","","Returns the local address that this socket is bound to.",38,[[],[["socketaddr",3],["result",6]]]],[11,"peer_addr","","Returns the address of this socket\'s peer.",38,[[],[["socketaddr",3],["result",6]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",38,[[],[["option",4],["result",6]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",38,[[["shutdown",4]],["result",6]]],[11,"poll_accept","tokio::net::unix","Attempts to poll `UnixStream` by polling inner…",39,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"bind","tokio::net","Creates a new `UnixListener` bound to the specified path.",40,[[],[["result",6],["unixlistener",3]]]],[11,"from_std","","Consumes a `UnixListener` in the standard library and…",40,[[["unixlistener",3]],[["result",6],["unixlistener",3]]]],[11,"local_addr","","Returns the local socket address of this listener.",40,[[],[["socketaddr",3],["result",6]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",40,[[],[["option",4],["result",6]]]],[11,"accept","","Accepts a new incoming connection to this listener.",40,[[]]],[11,"incoming","","Returns a stream over the connections being received on…",40,[[],["incoming",3]]],[11,"connect","","Connects to the socket named by `path`.",41,[[]]],[11,"from_std","","Consumes a `UnixStream` in the standard library and…",41,[[["unixstream",3]],[["result",6],["unixstream",3]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",41,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this…",41,[[],[["socketaddr",3],["result",6]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",41,[[],[["socketaddr",3],["result",6]]]],[11,"peer_cred","","Returns effective credentials of the process which called…",41,[[],[["result",6],["ucred",3]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",41,[[],[["option",4],["result",6]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",41,[[["shutdown",4]],["result",6]]],[11,"split","","Split a `UnixStream` into a read half and a write half,…",41,[[]]],[8,"ToSocketAddrs","","Converts or resolves without blocking to one or more…",null,null],[0,"prelude","tokio","A \\\"prelude\\\" for users of the `tokio` crate.",null,null],[8,"AsyncBufRead","tokio::prelude","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",18,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",18,[[["pin",3]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…",19,[[]]],[10,"poll_read","tokio::prelude","Attempts to read from the `AsyncRead` into `buf`.",19,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_buf","tokio::io","Pulls some bytes from this source into the specified…",19,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[8,"AsyncWrite","tokio::prelude","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write_buf","tokio::io","Writes a `Buf` into this value, returning how many bytes…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[0,"process","tokio","An implementation of asynchronous process management for…",null,null],[3,"Command","tokio::process","This structure mimics the API of [`std::process::Command`]…",null,null],[3,"Child","","Representation of a child process spawned onto an event…",null,null],[12,"stdin","","The handle for writing to the child\'s standard input…",42,null],[12,"stdout","","The handle for reading from the child\'s standard output…",42,null],[12,"stderr","","The handle for reading from the child\'s standard error…",42,null],[3,"ChildStdin","","The standard input stream for spawned children.",null,null],[3,"ChildStdout","","The standard output stream for spawned children.",null,null],[3,"ChildStderr","","The standard error stream for spawned children.",null,null],[11,"new","","Constructs a new `Command` for launching the program at…",43,[[["asref",8],["osstr",3]],["command",3]]],[11,"arg","","Adds an argument to pass to the program.",43,[[["asref",8],["osstr",3]],["command",3]]],[11,"args","","Adds multiple arguments to pass to the program.",43,[[],["command",3]]],[11,"env","","Inserts or updates an environment variable mapping.",43,[[],["command",3]]],[11,"envs","","Adds or updates multiple environment variable mappings.",43,[[],["command",3]]],[11,"env_remove","","Removes an environment variable mapping.",43,[[["asref",8],["osstr",3]],["command",3]]],[11,"env_clear","","Clears the entire environment map for the child process.",43,[[],["command",3]]],[11,"current_dir","","Sets the working directory for the child process.",43,[[["asref",8],["path",3]],["command",3]]],[11,"stdin","","Sets configuration for the child process\'s standard input…",43,[[["stdio",3],["into",8]],["command",3]]],[11,"stdout","","Sets configuration for the child process\'s standard output…",43,[[["stdio",3],["into",8]],["command",3]]],[11,"stderr","","Sets configuration for the child process\'s standard error…",43,[[["stdio",3],["into",8]],["command",3]]],[11,"kill_on_drop","","Controls whether a `kill` operation should be invoked on a…",43,[[],["command",3]]],[11,"uid","","Sets the child process\'s user ID. This translates to a…",43,[[],["command",3]]],[11,"gid","","Similar to `uid` but sets the group ID of the child…",43,[[],["command",3]]],[11,"pre_exec","","Schedules a closure to be run just before the `exec`…",43,[[],["command",3]]],[11,"spawn","","Executes the command as a child process, returning a…",43,[[],[["child",3],["result",6]]]],[11,"status","","Executes the command as a child process, waiting for it to…",43,[[]]],[11,"output","","Executes the command as a child process, waiting for it to…",43,[[]]],[11,"id","","Returns the OS-assigned process identifier associated with…",42,[[]]],[11,"kill","","Forces the child to exit.",42,[[],["result",6]]],[11,"wait_with_output","","Returns a future that will resolve to an `Output`,…",42,[[]]],[0,"runtime","tokio","The Tokio runtime.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[3,"TryCurrentError","","Error returned by `try_current` when no Runtime has been…",null,null],[3,"Runtime","","The Tokio runtime.",null,null],[11,"new","","Returns a new runtime builder initialized with default…",44,[[],["builder",3]]],[11,"enable_all","","Enables both I/O and time drivers.",44,[[]]],[11,"num_threads","","Sets the maximum number of worker threads for the…",44,[[]]],[11,"core_threads","","Sets the core number of worker threads for the `Runtime`\'s…",44,[[]]],[11,"max_threads","","Specifies limit for threads, spawned by the Runtime.",44,[[]]],[11,"thread_name","","Sets name of threads spawned by the `Runtime`\'s thread pool.",44,[[]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",44,[[]]],[11,"on_thread_start","","Executes function `f` after each thread is started but…",44,[[]]],[11,"on_thread_stop","","Executes function `f` before each thread stops.",44,[[]]],[11,"build","","Creates the configured `Runtime`.",44,[[],[["runtime",3],["result",6]]]],[11,"enable_io","","Enables the I/O driver.",44,[[]]],[11,"enable_time","","Enables the time driver.",44,[[]]],[11,"basic_scheduler","","Sets runtime to use a simpler scheduler that runs all…",44,[[]]],[11,"threaded_scheduler","","Sets runtime to use a multi-threaded scheduler for…",44,[[]]],[11,"enter","","Enter the runtime context. This allows you to construct…",45,[[]]],[11,"current","","Returns a `Handle` view over the currently running `Runtime`",45,[[]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",45,[[],[["trycurrenterror",3],["result",4]]]],[11,"spawn","","Spawns a future onto the Tokio runtime.",45,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on the Tokio runtime from a…",45,[[["future",8]]]],[11,"spawn_blocking","","Runs the provided closure on a thread where blocking is…",45,[[],["joinhandle",3]]],[11,"new","","Create a new runtime instance with default configuration…",46,[[],[["runtime",3],["result",6]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",46,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is…",46,[[["future",8]]]],[11,"enter","","Enter the runtime context. This allows you to construct…",46,[[]]],[11,"handle","","Return a handle to the runtime\'s spawner.",46,[[],["handle",3]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most `duration` for…",46,[[["duration",3]]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",null,null],[5,"ctrl_c","tokio::signal","Completes when a \\\"ctrl-c\\\" notification is sent to the…",null,[[]]],[0,"unix","","Unix-specific types for signal handling.",null,null],[3,"SignalKind","tokio::signal::unix","Represents the specific kind of signal to listen for.",null,null],[3,"Signal","","A stream of events for receiving a particular type of OS…",null,null],[5,"signal","","Creates a new stream which will receive notifications when…",null,[[["signalkind",3]],[["result",6],["signal",3]]]],[11,"from_raw","","Allows for listening to any valid OS signal.",47,[[["c_int",6]]]],[11,"alarm","","Represents the SIGALRM signal.",47,[[]]],[11,"child","","Represents the SIGCHLD signal.",47,[[]]],[11,"hangup","","Represents the SIGHUP signal.",47,[[]]],[11,"interrupt","","Represents the SIGINT signal.",47,[[]]],[11,"io","","Represents the SIGIO signal.",47,[[]]],[11,"pipe","","Represents the SIGPIPE signal.",47,[[]]],[11,"quit","","Represents the SIGQUIT signal.",47,[[]]],[11,"terminate","","Represents the SIGTERM signal.",47,[[]]],[11,"user_defined1","","Represents the SIGUSR1 signal.",47,[[]]],[11,"user_defined2","","Represents the SIGUSR2 signal.",47,[[]]],[11,"window_change","","Represents the SIGWINCH signal.",47,[[]]],[11,"recv","","Receives the next signal notification event.",48,[[]]],[11,"poll_recv","","Polls to receive the next signal notification event,…",48,[[["context",3]],[["poll",4],["option",4]]]],[0,"stream","tokio","Stream utilities for Tokio.",null,null],[8,"Stream","tokio::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",49,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",49,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",49,[[]]],[3,"Empty","","Stream for the `empty` function.",null,null],[3,"Iter","","Stream for the `iter` function.",null,null],[3,"Once","","Stream for the `once` function.",null,null],[3,"Pending","","Stream for the `pending` function.",null,null],[3,"StreamMap","","Combine many streams into one, indexing each source stream…",null,null],[5,"empty","","Creates a stream that yields nothing.",null,[[],["empty",3]]],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[],["iter",3]]],[5,"once","","Creates a stream that emits an element exactly once.",null,[[],["once",3]]],[5,"pending","","Creates a stream that is never ready",null,[[],["pending",3]]],[11,"new","","Creates an empty `StreamMap`.",50,[[],["streammap",3]]],[11,"with_capacity","","Creates an empty `StreamMap` with the specified capacity.",50,[[],["streammap",3]]],[11,"keys","","Returns an iterator visiting all keys in arbitrary order.",50,[[]]],[11,"values","","An iterator visiting all values in arbitrary order.",50,[[]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.",50,[[]]],[11,"capacity","","Returns the number of streams the map can hold without…",50,[[]]],[11,"len","","Returns the number of streams in the map.",50,[[]]],[11,"is_empty","","Returns `true` if the map contains no elements.",50,[[]]],[11,"clear","","Clears the map, removing all key-stream pairs. Keeps the…",50,[[]]],[11,"insert","","Insert a key-stream pair into the map.",50,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the stream at the…",50,[[],["option",4]]],[11,"contains_key","","Returns `true` if the map contains a stream for the…",50,[[]]],[8,"FromStream","","Convert from a `Stream`.",null,null],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Consumes and returns the next value in the stream or…",51,[[],["next",3]]],[11,"try_next","","Consumes and returns the next item in the stream. If an…",51,[[],["trynext",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a…",51,[[],["map",3]]],[11,"merge","","Combine two streams into one by interleaving the output of…",51,[[],["merge",3]]],[11,"filter","","Filters the values produced by this stream according to…",51,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while…",51,[[],["filtermap",3]]],[11,"fuse","","Creates a stream which ends after the first `None`.",51,[[],["fuse",3]]],[11,"take","","Creates a new stream of at most `n` items of the…",51,[[],["take",3]]],[11,"take_while","","Take elements from this stream while the provided…",51,[[],["takewhile",3]]],[11,"skip","","Creates a new stream that will skip the `n` first items of…",51,[[],["skip",3]]],[11,"skip_while","","Skip elements from the underlying stream while the…",51,[[],["skipwhile",3]]],[11,"all","","Tests if every element of the stream matches a predicate.",51,[[],["allfuture",3]]],[11,"any","","Tests if any element of the stream matches a predicate.",51,[[],["anyfuture",3]]],[11,"chain","","Combine two streams into one by first returning all values…",51,[[],["chain",3]]],[11,"fold","","A combinator that applies a function to every element in a…",51,[[],["foldfuture",3]]],[11,"collect","","Drain stream pushing all emitted values into a collection.",51,[[],["collect",3]]],[11,"timeout","","Applies a per-item timeout to the passed stream.",51,[[["duration",3]],["timeout",3]]],[0,"sync","tokio","Synchronization primitives for use in asynchronous contexts.",null,null],[3,"Barrier","tokio::sync","A barrier enables multiple threads to synchronize the…",null,null],[3,"BarrierWaitResult","","A `BarrierWaitResult` is returned by `wait` when all…",null,null],[3,"Mutex","","An asynchronous `Mutex`-like type.",null,null],[3,"MutexGuard","","A handle to a held `Mutex`.",null,null],[3,"TryLockError","","Error returned from the [`Mutex::try_lock`] function.",null,null],[3,"OwnedMutexGuard","","An owned handle to a held `Mutex`.",null,null],[3,"Notify","","Notify a single task to wake up.",null,null],[3,"Semaphore","","Counting semaphore performing asynchronous permit…",null,null],[3,"SemaphorePermit","","A permit from the semaphore.",null,null],[3,"OwnedSemaphorePermit","","An owned permit from the semaphore.",null,null],[3,"RwLock","","An asynchronous reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[11,"new","","Creates a new barrier that can block a given number of…",52,[[],["barrier",3]]],[11,"wait","","Does not resolve until all tasks have rendezvoused here.",52,[[]]],[11,"is_leader","","Returns `true` if this thread from wait is the \\\"leader…",53,[[]]],[0,"broadcast","","A multi-producer, multi-consumer broadcast queue. Each…",null,null],[3,"Sender","tokio::sync::broadcast","Sending-half of the [`broadcast`] channel.",null,null],[3,"Receiver","","Receiving-half of the [`broadcast`] channel.",null,null],[3,"SendError","","Error returned by [`Sender::send`][Sender::send].",null,null],[12,"0","","",54,null],[4,"RecvError","","An error returned from the [`recv`] function on a…",null,null],[13,"Closed","","There are no more active senders implying no further…",55,null],[13,"Lagged","","The receiver lagged too far behind. Attempting to receive…",55,null],[4,"TryRecvError","","An error returned from the [`try_recv`] function on a…",null,null],[13,"Empty","","The channel is currently empty. There are still active…",56,null],[13,"Closed","","There are no more active senders implying no further…",56,null],[13,"Lagged","","The receiver lagged too far behind and has been forcibly…",56,null],[5,"channel","","Create a bounded, multi-producer, multi-consumer channel…",null,[[]]],[11,"send","","Attempts to send a value to all active [`Receiver`]…",57,[[],[["senderror",3],["result",4]]]],[11,"subscribe","","Creates a new [`Receiver`] handle that will receive values…",57,[[],["receiver",3]]],[11,"receiver_count","","Returns the number of active receivers",57,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",58,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Receives the next value for this receiver.",58,[[]]],[11,"into_stream","","Convert the receiver into a `Stream`.",58,[[]]],[0,"mpsc","tokio::sync","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Receiver","tokio::sync::mpsc","Receive values from the associated `Sender`.",null,null],[3,"Sender","","Send values to the associated `Receiver`.",null,null],[3,"UnboundedReceiver","","Receive values from the associated `UnboundedSender`.",null,null],[3,"UnboundedSender","","Send values to the associated `UnboundedReceiver`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[]]],[5,"unbounded_channel","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[11,"recv","","Receives the next value for this receiver.",59,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",59,[[],[["result",4],["tryrecverror",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",59,[[]]],[11,"send","","Sends a value, waiting until there is capacity.",60,[[]]],[11,"try_send","","Attempts to immediately send a message on this `Sender`",60,[[],[["result",4],["trysenderror",4]]]],[11,"send_timeout","","Sends a value, waiting until there is capacity, but only…",60,[[["duration",3]]]],[11,"poll_ready","","Returns `Poll::Ready(Ok(()))` when the channel is able to…",60,[[["context",3]],[["poll",4],["result",4]]]],[11,"disarm","","Undo a successful call to `poll_ready`.",60,[[]]],[11,"recv","","Receives the next value for this receiver.",61,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",61,[[],[["result",4],["tryrecverror",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",61,[[]]],[11,"send","","Attempts to send a message on this `UnboundedSender`…",62,[[],[["senderror",3],["result",4]]]],[0,"error","","Channel error types",null,null],[3,"SendError","tokio::sync::mpsc::error","Error returned by the `Sender`.",null,null],[12,"0","","",63,null],[3,"RecvError","","Error returned by `Receiver`.",null,null],[3,"ClosedError","","Error returned by `Sender::poll_ready`.",null,null],[4,"TrySendError","","This enumeration is the list of the possible error…",null,null],[13,"Full","","The data could not be sent on the channel because the…",64,null],[13,"Closed","","The receive half of the channel was explicitly closed or…",64,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that…",null,null],[13,"Empty","","This channel is currently empty, but the Sender(s) have…",65,null],[13,"Closed","","The channel\'s sending half has been closed, and there will…",65,null],[4,"SendTimeoutError","","Error returned by `Sender::send_timeout`].",null,null],[13,"Timeout","","The data could not be sent on the channel because the…",66,null],[13,"Closed","","The receive half of the channel was explicitly closed or…",66,null],[11,"new","tokio::sync","Creates a new lock in an unlocked state ready for use.",67,[[]]],[11,"lock","","Locks this mutex, causing the current task to yield until…",67,[[]]],[11,"lock_owned","","Locks this mutex, causing the current task to yield until…",67,[[["arc",3]]]],[11,"try_lock","","Attempts to acquire the lock, and returns [`TryLockError`]…",67,[[],[["result",4],["mutexguard",3],["trylockerror",3]]]],[11,"try_lock_owned","","Attempts to acquire the lock, and returns [`TryLockError`]…",67,[[["arc",3]],[["ownedmutexguard",3],["trylockerror",3],["result",4]]]],[11,"into_inner","","Consumes the mutex, returning the underlying data. #…",67,[[]]],[11,"new","","Create a new `Notify`, initialized without a permit.",68,[[],["notify",3]]],[11,"notified","","Wait for a notification.",68,[[]]],[11,"notify","","Notifies a waiting task",68,[[]]],[0,"oneshot","","A channel for sending a single message between…",null,null],[3,"Sender","tokio::sync::oneshot","Sends a value to the associated `Receiver`.",null,null],[3,"Receiver","","Receive a value from the associated `Sender`.",null,null],[5,"channel","","Create a new one-shot channel for sending single values…",null,[[]]],[0,"error","","Oneshot error types",null,null],[3,"RecvError","tokio::sync::oneshot::error","Error returned by the `Future` implementation for…",null,null],[4,"TryRecvError","","Error returned by the `try_recv` function on `Receiver`.",null,null],[13,"Empty","","The send half of the channel has not yet sent a value.",69,null],[13,"Closed","","The send half of the channel was dropped without sending a…",69,null],[11,"send","tokio::sync::oneshot","Attempts to send a value on this channel, returning it…",70,[[],["result",4]]],[11,"closed","","Waits for the associated [`Receiver`] handle to close.",70,[[]]],[11,"is_closed","","Returns `true` if the associated [`Receiver`] handle has…",70,[[]]],[11,"close","","Prevents the associated [`Sender`] handle from sending a…",71,[[]]],[11,"try_recv","","Attempts to receive a value.",71,[[],[["tryrecverror",4],["result",4]]]],[11,"new","tokio::sync","Creates a new semaphore with the initial number of permits.",72,[[]]],[11,"available_permits","","Returns the current number of available permits.",72,[[]]],[11,"add_permits","","Adds `n` new permits to the semaphore.",72,[[]]],[11,"acquire","","Acquires permit from the semaphore.",72,[[]]],[11,"try_acquire","","Tries to acquire a permit from the semaphore.",72,[[],[["result",4],["semaphorepermit",3],["tryacquireerror",3]]]],[11,"acquire_owned","","Acquires permit from the semaphore.",72,[[["arc",3]]]],[11,"try_acquire_owned","","Tries to acquire a permit from the semaphore.",72,[[["arc",3]],[["tryacquireerror",3],["result",4],["ownedsemaphorepermit",3]]]],[11,"forget","","Forgets the permit without releasing it back to the…",73,[[]]],[11,"forget","","Forgets the permit without releasing it back to the…",74,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",75,[[],["rwlock",3]]],[11,"read","","Locks this rwlock with shared read access, causing the…",75,[[]]],[11,"write","","Locks this rwlock with exclusive write access, causing the…",75,[[]]],[11,"into_inner","","Consumes the lock, returning the underlying data.",75,[[]]],[0,"watch","","A single-producer, multi-consumer channel that only…",null,null],[3,"Receiver","tokio::sync::watch","Receives values from the associated `Sender`.",null,null],[3,"Sender","","Sends values to the associated `Receiver`.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Creates a new watch channel, returning the \\\"send\\\" and…",null,[[["clone",8]]]],[0,"error","","Watch error types",null,null],[3,"SendError","tokio::sync::watch::error","Error produced when sending a value fails.",null,null],[11,"borrow","tokio::sync::watch","Returns a reference to the most recently sent value",76,[[],["ref",3]]],[11,"recv","","Attempts to clone the latest value sent via the channel.",76,[[]]],[11,"broadcast","","Broadcasts a new value via the channel, notifying all…",77,[[],[["senderror",3],["result",4]]]],[11,"closed","","Completes when all receivers have dropped.",77,[[]]],[0,"task","tokio","Asynchronous green-threads.",null,null],[3,"JoinError","tokio::task","Task failed to execute to completion.",null,null],[3,"JoinHandle","","An owned permission to join on a task (await its…",null,null],[3,"LocalSet","","A set of tasks which are executed on the same thread.",null,null],[3,"LocalKey","","A key for task-local data.",null,null],[5,"spawn_blocking","","Runs the provided closure on a thread where blocking is…",null,[[],["joinhandle",3]]],[5,"block_in_place","","Runs the provided blocking function on the current thread…",null,[[]]],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[],["joinhandle",3]]],[5,"yield_now","","Yields execution back to the Tokio runtime.",null,[[]]],[5,"spawn_local","","Spawns a `!Send` future on the local task set.",null,[[],["joinhandle",3]]],[11,"new","","Returns a new local task set.",78,[[],["localset",3]]],[11,"spawn_local","","Spawns a `!Send` task onto the local task set.",78,[[],["joinhandle",3]]],[11,"block_on","","Runs a future to completion on the provided runtime,…",78,[[["runtime",3]]]],[11,"run_until","","Run a future to completion on the local set, returning its…",78,[[]]],[11,"scope","","Sets a value `T` as the task-local value for the future `F`.",79,[[]]],[11,"with","","Accesses the current task-local and runs the provided…",79,[[]]],[11,"try_with","","Accesses the current task-local and runs the provided…",79,[[],[["accesserror",3],["result",4]]]],[11,"get","","Returns a copy of the task-local value if the task-local…",79,[[]]],[0,"time","tokio","Utilities for tracking time.",null,null],[3,"Duration","tokio::time","A `Duration` type to represent a span of time, typically…",null,null],[3,"DelayQueue","","A queue of delayed elements.",null,null],[3,"Delay","","Future returned by `delay_until` and `delay_for`.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Instant","","A measurement of the system clock, useful for talking to…",null,null],[3,"Interval","","Stream returned by `interval` and `interval_at`.",null,null],[3,"Elapsed","","Error returned by `Timeout`.",null,null],[3,"Timeout","","Future returned by `timeout` and `timeout_at`.",null,null],[3,"Throttle","","Stream for the `throttle` function.",null,null],[5,"advance","","Advance time",null,[[["duration",3]]]],[5,"pause","","Pause time",null,[[]]],[5,"resume","","Resume time",null,[[]]],[5,"delay_for","","Waits until `duration` has elapsed.",null,[[["duration",3]],["delay",3]]],[5,"delay_until","","Waits until `deadline` is reached.",null,[[["instant",3]],["delay",3]]],[5,"interval","","Creates new `Interval` that yields with interval of…",null,[[["duration",3]],["interval",3]]],[5,"interval_at","","Creates new `Interval` that yields with interval of…",null,[[["duration",3],["instant",3]],["interval",3]]],[5,"timeout","","Require a `Future` to complete before the specified…",null,[[["duration",3]],["timeout",3]]],[5,"timeout_at","","Require a `Future` to complete before the specified…",null,[[["instant",3]],["timeout",3]]],[5,"throttle","","Slows down a stream by enforcing a delay between items.…",null,[[["duration",3]],["throttle",3]]],[0,"delay_queue","","A queue of delayed elements.",null,null],[3,"DelayQueue","tokio::time::delay_queue","A queue of delayed elements.",null,null],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",null,null],[3,"Key","","Token to a value stored in a `DelayQueue`.",null,null],[11,"new","","Creates a new, empty, `DelayQueue`",80,[[],["delayqueue",3]]],[11,"with_capacity","","Creates a new, empty, `DelayQueue` with the specified…",80,[[],["delayqueue",3]]],[11,"insert_at","","Inserts `value` into the queue set to expire at a specific…",80,[[["instant",3]],["key",3]]],[11,"poll_expired","","Attempts to pull out the next value of the delay queue,…",80,[[["context",3]],[["option",4],["poll",4]]]],[11,"insert","","Inserts `value` into the queue set to expire after the…",80,[[["duration",3]],["key",3]]],[11,"remove","","Removes the item associated with `key` from the queue.",80,[[["key",3]],["expired",3]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",80,[[["instant",3],["key",3]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",80,[[["duration",3],["key",3]]]],[11,"clear","","Clears the queue, removing all items.",80,[[]]],[11,"capacity","","Returns the number of elements the queue can hold without…",80,[[]]],[11,"len","","Returns the number of elements currently in the queue.",80,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more items to…",80,[[]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",80,[[]]],[11,"get_ref","","Returns a reference to the inner value.",81,[[]]],[11,"get_mut","","Returns a mutable reference to the inner value.",81,[[]]],[11,"into_inner","","Consumes `self` and returns the inner value.",81,[[]]],[11,"deadline","","Returns the deadline that the expiration was set to.",81,[[],["instant",3]]],[11,"deadline","tokio::time","Returns the instant at which the future will complete.",82,[[],["instant",3]]],[11,"is_elapsed","","Returns `true` if the `Delay` has elapsed",82,[[]]],[11,"reset","","Resets the `Delay` instance to a new deadline.",82,[[["instant",3]]]],[11,"shutdown","","Creates an error representing a shutdown timer.",83,[[],["error",3]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",83,[[]]],[11,"at_capacity","","Creates an error representing a timer at capacity.",83,[[],["error",3]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",83,[[]]],[11,"now","","Returns an instant corresponding to \\\"now\\\".",84,[[],["instant",3]]],[11,"from_std","","Create a `tokio::time::Instant` from a `std::time::Instant`.",84,[[["instant",3]],["instant",3]]],[11,"into_std","","Convert the value into a `std::time::Instant`.",84,[[],["instant",3]]],[11,"duration_since","","Returns the amount of time elapsed from another instant to…",84,[[["instant",3]],["duration",3]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant to…",84,[[["instant",3]],[["option",4],["duration",3]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant to…",84,[[["instant",3]],["duration",3]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was…",84,[[],["duration",3]]],[11,"checked_add","","Returns `Some(t)` where `t` is the time `self + duration`…",84,[[["duration",3]],[["option",4],["instant",3]]]],[11,"checked_sub","","Returns `Some(t)` where `t` is the time `self - duration`…",84,[[["duration",3]],[["option",4],["instant",3]]]],[11,"tick","","Completes when the next instant in the interval has been…",85,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",86,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",86,[[]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",86,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",87,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",87,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",87,[[]]],[14,"pin","tokio","Pins a value on the stack.",null,null],[14,"select","","Wait on multiple concurrent branches, returning when the…",null,null],[14,"join","","Wait on multiple concurrent branches, returning when all…",null,null],[14,"try_join","","Wait on multiple concurrent branches, returning when all…",null,null],[14,"task_local","","Declares a new task-local key of type…",null,null],[11,"from","tokio::fs","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","tokio::io","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"try_poll","","",92,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"try_poll","","",93,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"try_poll_next","","",15,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"try_poll_next","","",16,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","tokio::net","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"try_poll_next","","",27,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"try_poll_next","","",40,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","tokio::net::tcp","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"try_poll_next","","",28,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","tokio::net::udp","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","tokio::net::unix","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"try_poll_next","","",39,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","tokio::process","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"try_poll","","",42,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","tokio::runtime","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","tokio::task","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"try_poll","","",106,[[["pin",3],["context",3]],["poll",4]]],[11,"from","tokio::signal::unix","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","tokio::stream","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"try_poll_next","","",107,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"try_poll_next","","",108,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"try_poll_next","","",109,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","tokio::sync","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"load","","",111,[[]]],[11,"load","","",111,[[],["dynguard",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"load","","",113,[[]]],[11,"load","","",113,[[],["dynguard",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"load","","",114,[[]]],[11,"load","","",114,[[],["dynguard",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"load","","",115,[[]]],[11,"load","","",115,[[],["dynguard",3]]],[11,"from","tokio::sync::broadcast","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"try_poll_next","","",58,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","tokio::sync::mpsc","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"try_poll_next","","",59,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"try_poll_next","","",61,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","tokio::sync::mpsc::error","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_string","","",117,[[],["string",3]]],[11,"borrow","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","tokio::sync::oneshot","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"try_poll","","",71,[[["pin",3],["context",3]],["poll",4]]],[11,"from","tokio::sync::oneshot::error","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_string","","",118,[[],["string",3]]],[11,"borrow","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","tokio::sync::watch","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"try_poll_next","","",76,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"load","","",119,[[]]],[11,"load","","",119,[[],["dynguard",3]]],[11,"from","tokio::sync::watch::error","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_string","","",120,[[],["string",3]]],[11,"borrow","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","tokio::task","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","tokio::time","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","tokio::time::delay_queue","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"try_poll_next","","",80,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","tokio::time","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"try_poll","","",86,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"try_poll_next","","",87,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","tokio::time::delay_queue","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"description","tokio::io","",88,[[]]],[11,"cause","","",88,[[],[["error",8],["option",4]]]],[11,"source","","",88,[[],[["option",4],["error",8]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cmp","","",7,[[["errorkind",4]],["ordering",4]]],[11,"partial_cmp","","",7,[[["errorkind",4]],[["ordering",4],["option",4]]]],[11,"clone","","",7,[[],["errorkind",4]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",88,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",88,[[["nulerror",3]],["error",3]]],[11,"from","","",88,[[["intoinnererror",3]],["error",3]]],[11,"eq","","",7,[[["errorkind",4]]]],[11,"hash","","",7,[[]]],[11,"sum","tokio::time","",121,[[],["duration",3]]],[11,"sum","","",121,[[],["duration",3]]],[11,"eq","","",121,[[["duration",3]]]],[11,"ne","","",121,[[["duration",3]]]],[11,"cmp","","",121,[[["duration",3]],["ordering",4]]],[11,"sub_assign","","",121,[[["duration",3]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"mul_assign","","",121,[[]]],[11,"partial_cmp","","",121,[[["duration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",121,[[["duration",3]]]],[11,"le","","",121,[[["duration",3]]]],[11,"gt","","",121,[[["duration",3]]]],[11,"ge","","",121,[[["duration",3]]]],[11,"div","","",121,[[],["duration",3]]],[11,"mul","","",121,[[],["duration",3]]],[11,"clone","","",121,[[],["duration",3]]],[11,"sub","","",121,[[["duration",3]],["duration",3]]],[11,"hash","","",121,[[]]],[11,"add","","",121,[[["duration",3]],["duration",3]]],[11,"add_assign","","",121,[[["duration",3]]]],[11,"div_assign","","",121,[[]]],[11,"default","","",121,[[],["duration",3]]],[11,"poll_fill_buf","tokio::io","",12,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",12,[[["pin",3]]]],[11,"poll_fill_buf","","",13,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",13,[[["pin",3]]]],[11,"poll_fill_buf","","",14,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",14,[[["pin",3]]]],[11,"poll_fill_buf","","",94,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",94,[[["pin",3]]]],[11,"poll_fill_buf","","",97,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",97,[[["pin",3]]]],[11,"poll_fill_buf","","",17,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",17,[[["pin",3]]]],[11,"prepare_uninitialized_buffer","tokio::fs","",1,[[]]],[11,"poll_read","","",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","tokio::io","",8,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",90,[[]]],[11,"poll_read","","",90,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",10,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_buf","","",10,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",12,[[]]],[11,"poll_read","","",13,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",13,[[]]],[11,"poll_read","","",14,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",14,[[]]],[11,"prepare_uninitialized_buffer","","",94,[[]]],[11,"poll_read","","",94,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",95,[[]]],[11,"poll_read","","",95,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",97,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_buf","","",97,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",97,[[]]],[11,"prepare_uninitialized_buffer","","",17,[[]]],[11,"poll_read","","",17,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"prepare_uninitialized_buffer","tokio::net::tcp","",29,[[]]],[11,"poll_read","","",29,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",30,[[]]],[11,"poll_read","","",30,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","tokio::net","",32,[[]]],[11,"poll_read","","",32,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","tokio::net::unix","",99,[[]]],[11,"poll_read","","",99,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","tokio::net","",41,[[]]],[11,"poll_read","","",41,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","tokio::process","",102,[[]]],[11,"poll_read","","",102,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"prepare_uninitialized_buffer","","",103,[[]]],[11,"poll_read","","",103,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"start_seek","tokio::fs","",1,[[["context",3],["seekfrom",4],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_complete","","",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",1,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",1,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write","tokio::io","",8,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",8,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",8,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",89,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",89,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",89,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",91,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",91,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",91,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_flush","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write_buf","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",12,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",13,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",13,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",13,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",14,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",14,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",14,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",96,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_flush","","",96,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",96,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_write","tokio::net::tcp","",98,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_buf","","",98,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",98,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",98,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",31,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_buf","","",31,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",31,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",31,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::net","",32,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_buf","","",32,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",32,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",32,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::net::unix","",100,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",100,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",100,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::net","",41,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",41,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",41,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::process","",101,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",101,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",101,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"mode","tokio::fs","",2,[[],["openoptions",3]]],[11,"custom_flags","","",2,[[],["openoptions",3]]],[11,"mode","","",0,[[]]],[11,"drop","tokio::io","",8,[[]]],[11,"drop","","",9,[[]]],[11,"drop","tokio::net::tcp","",31,[[]]],[11,"drop","tokio::task","",106,[[]]],[11,"drop","tokio::sync::broadcast","",57,[[]]],[11,"drop","","",58,[[]]],[11,"drop","tokio::sync","",111,[[]]],[11,"drop","","",113,[[]]],[11,"drop","tokio::sync::oneshot","",70,[[]]],[11,"drop","","",71,[[]]],[11,"drop","tokio::sync","",73,[[]]],[11,"drop","","",74,[[]]],[11,"drop","tokio::sync::watch","",76,[[]]],[11,"drop","","",77,[[]]],[11,"drop","tokio::task","",78,[[]]],[11,"as_ref","tokio::net::tcp","",29,[[],["tcpstream",3]]],[11,"as_ref","","",98,[[],["tcpstream",3]]],[11,"as_ref","","",30,[[],["tcpstream",3]]],[11,"as_ref","","",31,[[],["tcpstream",3]]],[11,"as_ref","tokio::net::udp","",36,[[],["udpsocket",3]]],[11,"as_ref","","",35,[[],["udpsocket",3]]],[11,"as_ref","tokio::net::unix","",99,[[],["unixstream",3]]],[11,"as_ref","","",100,[[],["unixstream",3]]],[11,"from","tokio::fs","",1,[[["file",3]]]],[11,"from","","",2,[[["openoptions",3]],["openoptions",3]]],[11,"from","tokio::io","",13,[[["bufreader",3],["bufwriter",3]]]],[11,"from","","",13,[[["bufwriter",3],["bufreader",3]]]],[11,"from","tokio::process","",43,[[["stdcommand",3]],["command",3]]],[11,"from","tokio::io","",88,[[["joinerror",3]],["error",3]]],[11,"from","tokio::sync::mpsc::error","",63,[[],["senderror",3]]],[11,"from","","",64,[[],["trysenderror",4]]],[11,"from","","",64,[[["senderror",3]],["trysenderror",4]]],[11,"from","tokio::sync","",67,[[]]],[11,"from","","",75,[[]]],[11,"from","tokio::time","",84,[[["instant",3]],["instant",3]]],[11,"from","tokio::io","",88,[[["elapsed",3]],["error",3]]],[11,"clone","tokio::fs","",2,[[],["openoptions",3]]],[11,"clone","tokio::net::unix","",37,[[],["ucred",3]]],[11,"clone","tokio::runtime","",45,[[],["handle",3]]],[11,"clone","tokio::signal::unix","",47,[[],["signalkind",3]]],[11,"clone","tokio::sync","",53,[[],["barrierwaitresult",3]]],[11,"clone","tokio::sync::broadcast","",57,[[],["sender",3]]],[11,"clone","tokio::sync::mpsc","",60,[[]]],[11,"clone","","",62,[[]]],[11,"clone","tokio::sync::watch","",76,[[]]],[11,"clone","tokio::time::delay_queue","",123,[[],["key",3]]],[11,"clone","tokio::time","",84,[[],["instant",3]]],[11,"default","tokio::fs","",0,[[],["dirbuilder",3]]],[11,"default","","",2,[[]]],[11,"default","tokio::runtime","",44,[[]]],[11,"default","tokio::stream","",50,[[],["streammap",3]]],[11,"default","tokio::sync","",67,[[]]],[11,"default","","",68,[[],["notify",3]]],[11,"default","","",75,[[]]],[11,"default","tokio::task","",78,[[],["localset",3]]],[11,"default","tokio::time::delay_queue","",80,[[],["delayqueue",3]]],[11,"cmp","tokio::time","",84,[[["instant",3]],["ordering",4]]],[11,"eq","tokio::net::unix","",37,[[["ucred",3]]]],[11,"ne","","",37,[[["ucred",3]]]],[11,"eq","tokio::sync::broadcast","",55,[[["recverror",4]]]],[11,"ne","","",55,[[["recverror",4]]]],[11,"eq","","",56,[[["tryrecverror",4]]]],[11,"ne","","",56,[[["tryrecverror",4]]]],[11,"eq","tokio::sync::mpsc::error","",65,[[["tryrecverror",4]]]],[11,"eq","tokio::sync::oneshot::error","",118,[[["recverror",3]]]],[11,"ne","","",118,[[["recverror",3]]]],[11,"eq","","",69,[[["tryrecverror",4]]]],[11,"eq","tokio::time","",84,[[["instant",3]]]],[11,"ne","","",84,[[["instant",3]]]],[11,"eq","","",122,[[["elapsed",3]]]],[11,"ne","","",122,[[["elapsed",3]]]],[11,"partial_cmp","","",84,[[["instant",3]],[["option",4],["ordering",4]]]],[11,"lt","","",84,[[["instant",3]]]],[11,"le","","",84,[[["instant",3]]]],[11,"gt","","",84,[[["instant",3]]]],[11,"ge","","",84,[[["instant",3]]]],[11,"deref","tokio::sync","",111,[[]]],[11,"deref","","",113,[[]]],[11,"deref","","",114,[[]]],[11,"deref","","",115,[[]]],[11,"deref","tokio::sync::watch","",119,[[]]],[11,"deref_mut","tokio::sync","",111,[[]]],[11,"deref_mut","","",113,[[]]],[11,"deref_mut","","",115,[[]]],[11,"fmt","tokio::fs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::io","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",27,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::tcp","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::udp","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",38,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",39,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",40,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",41,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",37,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::process","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::runtime","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::signal::unix","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::stream","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc::error","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot::error","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch::error","",120,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time::delay_queue","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::tcp","",26,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::udp","",33,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",105,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::runtime","",104,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc::error","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot::error","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch::error","",120,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"sub","","",84,[[["instant",3]],["duration",3]]],[11,"sub","","",84,[[["duration",3]],["instant",3]]],[11,"add","","",84,[[["duration",3]],["instant",3]]],[11,"add_assign","","",84,[[["duration",3]]]],[11,"sub_assign","","",84,[[["duration",3]]]],[11,"hash","tokio::net::unix","",37,[[]]],[11,"hash","tokio::time","",84,[[]]],[11,"try_from","tokio::net","Consumes stream, returning the tokio I/O object.",27,[[["tcplistener",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",32,[[["tcpstream",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",34,[[["udpsocket",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",38,[[["unixdatagram",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",40,[[["unixlistener",3]],["result",6]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",41,[[["unixstream",3]],["result",6]]],[11,"ino","tokio::fs","",6,[[]]],[11,"as_raw_fd","","",1,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::io","",89,[[],["rawfd",6]]],[11,"as_raw_fd","","",90,[[],["rawfd",6]]],[11,"as_raw_fd","","",91,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::net","",27,[[],["rawfd",6]]],[11,"as_raw_fd","","",32,[[],["rawfd",6]]],[11,"as_raw_fd","","",34,[[],["rawfd",6]]],[11,"as_raw_fd","","",38,[[],["rawfd",6]]],[11,"as_raw_fd","","",40,[[],["rawfd",6]]],[11,"as_raw_fd","","",41,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::process","",101,[[],["rawfd",6]]],[11,"as_raw_fd","","",102,[[],["rawfd",6]]],[11,"as_raw_fd","","",103,[[],["rawfd",6]]],[11,"poll","tokio::io","",92,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",93,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll","tokio::process","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","tokio::task","",106,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","tokio::sync::oneshot","",71,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","tokio::task","",78,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","tokio::time","",82,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",86,[[["context",3],["pin",3]],["poll",4]]],[11,"poll_next","tokio::fs","",5,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::io","",15,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",16,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::net","",27,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::net::tcp","",28,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::net::unix","",39,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::net","",40,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::signal::unix","",48,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::stream","",107,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",107,[[]]],[11,"poll_next","","",108,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",108,[[]]],[11,"poll_next","","",109,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",109,[[]]],[11,"poll_next","","",110,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",110,[[]]],[11,"poll_next","","",50,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",50,[[]]],[11,"poll_next","tokio::sync::mpsc","",59,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",61,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::sync::watch","",76,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::time::delay_queue","",80,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::time","",85,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",87,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"new","tokio::io","Creates a new I/O error from a known kind of error as well…",88,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which…",88,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",88,[[],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",88,[[],["option",4]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",88,[[],[["error",8],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",88,[[],[["error",8],["option",4]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",88,[[],[["option",4],["box",3]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",88,[[],["errorkind",4]]],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",19,[[]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",19,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",21,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"read_until","","Reads all bytes into `buf` until the delimiter `byte` or…",22,[[["vec",3]],["readuntil",3]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is reached,…",22,[[["string",3]],["readline",3]]],[11,"split","","Returns a stream of the contents of this reader split on…",22,[[],["split",3]]],[11,"lines","","Returns a stream over the lines of this reader. This…",22,[[],["lines",3]]],[11,"chain","","Creates a new `AsyncRead` instance that chains this stream…",23,[[],["chain",3]]],[11,"read","","Pulls some bytes from this source into the specified…",23,[[],["read",3]]],[11,"read_buf","","Pulls some bytes from this source into the specified…",23,[[],["readbuf",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill `buf`.",23,[[],["readexact",3]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",23,[[],["readu8",3]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",23,[[],["readi8",3]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from…",23,[[],["readu16",3]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",23,[[],["readi16",3]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from…",23,[[],["readu32",3]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",23,[[],["readi32",3]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from…",23,[[],["readu64",3]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from…",23,[[],["readi64",3]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order from…",23,[[],["readu128",3]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from…",23,[[],["readi128",3]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them…",23,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them…",23,[[["string",3]],["readtostring",3]]],[11,"take","","Creates an adaptor which reads at most `limit` bytes from…",23,[[],["take",3]]],[11,"seek","","Creates a future which will seek an IO object, and then…",24,[[["seekfrom",4]],["seek",3]]],[11,"write","","Writes a buffer into this writer, returning how many bytes…",25,[[],["write",3]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer\'s…",25,[[],["writebuf",3]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",25,[[],["writeall",3]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[],["writeu8",3]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[],["writei8",3]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to…",25,[[],["writeu16",3]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the…",25,[[],["writei16",3]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to…",25,[[],["writeu32",3]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the…",25,[[],["writei32",3]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to…",25,[[],["writeu64",3]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",25,[[],["writei64",3]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to…",25,[[],["writeu128",3]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to…",25,[[],["writei128",3]]],[11,"flush","","Flushes this output stream, ensuring that all…",25,[[],["flush",3]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can…",25,[[],["shutdown",3]]],[11,"is_cancelled","tokio::task","Returns true if the error was caused by the task being…",105,[[]]],[11,"is_panic","","Returns true if the error was caused by the task panicking",105,[[]]],[11,"into_panic","","Consumes the join error, returning the object with which…",105,[[],[["any",8],["box",3]]]],[11,"try_into_panic","","Consumes the join error, returning the object with which…",105,[[],[["joinerror",3],["result",4],["box",3]]]],[18,"SECOND","tokio::time","The duration of one second.",121,null],[18,"MILLISECOND","","The duration of one millisecond.",121,null],[18,"MICROSECOND","","The duration of one microsecond.",121,null],[18,"NANOSECOND","","The duration of one nanosecond.",121,null],[11,"new","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",121,[[]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",121,[[]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",121,[[]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",121,[[]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",121,[[]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",121,[[]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",121,[[]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",121,[[["duration",3]],[["option",4],["duration",3]]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",121,[[["duration",3]],[["option",4],["duration",3]]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",121,[[],[["option",4],["duration",3]]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",121,[[],[["option",4],["duration",3]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this `Duration`…",121,[[]]],[11,"as_secs_f32","","Returns the number of seconds contained by this `Duration`…",121,[[]]],[11,"from_secs_f64","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"from_secs_f32","","Creates a new `Duration` from the specified number of…",121,[[],["duration",3]]],[11,"mul_f64","","Multiplies `Duration` by `f64`.",121,[[],["duration",3]]],[11,"mul_f32","","Multiplies `Duration` by `f32`.",121,[[],["duration",3]]],[11,"div_f64","","Divide `Duration` by `f64`.",121,[[],["duration",3]]],[11,"div_f32","","Divide `Duration` by `f32`.",121,[[],["duration",3]]],[11,"div_duration_f64","","Divide `Duration` by `Duration` and return `f64`.",121,[[["duration",3]]]],[11,"div_duration_f32","","Divide `Duration` by `Duration` and return `f32`.",121,[[["duration",3]]]]],"p":[[3,"DirBuilder"],[3,"File"],[3,"OpenOptions"],[8,"OpenOptionsExt"],[8,"DirBuilderExt"],[3,"ReadDir"],[3,"DirEntry"],[4,"ErrorKind"],[3,"PollEvented"],[3,"Registration"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"BufReader"],[3,"BufStream"],[3,"BufWriter"],[3,"Lines"],[3,"Split"],[3,"Take"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[8,"AsyncBufReadExt"],[8,"AsyncReadExt"],[8,"AsyncSeekExt"],[8,"AsyncWriteExt"],[3,"ReuniteError"],[3,"TcpListener"],[3,"Incoming"],[3,"ReadHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"TcpStream"],[3,"ReuniteError"],[3,"UdpSocket"],[3,"RecvHalf"],[3,"SendHalf"],[3,"UCred"],[3,"UnixDatagram"],[3,"Incoming"],[3,"UnixListener"],[3,"UnixStream"],[3,"Child"],[3,"Command"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"SignalKind"],[3,"Signal"],[8,"Stream"],[3,"StreamMap"],[8,"StreamExt"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"SendError"],[4,"RecvError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Receiver"],[3,"Sender"],[3,"UnboundedReceiver"],[3,"UnboundedSender"],[3,"SendError"],[4,"TrySendError"],[4,"TryRecvError"],[4,"SendTimeoutError"],[3,"Mutex"],[3,"Notify"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"SemaphorePermit"],[3,"OwnedSemaphorePermit"],[3,"RwLock"],[3,"Receiver"],[3,"Sender"],[3,"LocalSet"],[3,"LocalKey"],[3,"DelayQueue"],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Throttle"],[3,"Error"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Seek"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StreamReader"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"TryCurrentError"],[3,"JoinError"],[3,"JoinHandle"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"MutexGuard"],[3,"TryLockError"],[3,"OwnedMutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RecvError"],[3,"ClosedError"],[3,"RecvError"],[3,"Ref"],[3,"SendError"],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]},\
"tokio_macros":{"doc":"Macros for use with Tokio","i":[[23,"main_threaded","tokio_macros","Marks async function to be executed by selected runtime.",null,null],[23,"main","","Marks async function to be executed by selected runtime.",null,null],[23,"main_basic","","Marks async function to be executed by selected runtime.",null,null],[23,"test_threaded","","Marks async function to be executed by runtime, suitable…",null,null],[23,"test","","Marks async function to be executed by runtime, suitable…",null,null],[23,"test_basic","","Marks async function to be executed by runtime, suitable…",null,null]],"p":[]},\
"tokio_test":{"doc":"Tokio and Futures based testing utilites","i":[[5,"block_on","tokio_test","Runs the provided future, blocking the current thread…",null,[[["future",8]]]],[0,"io","","A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",null,null],[3,"Mock","tokio_test::io","An I/O object that follows a predefined script.",null,null],[3,"Handle","","A handle to send additional actions to the related `Mock`.",null,null],[3,"Builder","","Builds `Mock` instances.",null,null],[11,"new","","Return a new, empty `Builder.",0,[[]]],[11,"read","","Sequence a `read` operation.",0,[[]]],[11,"read_error","","Sequence a `read` operation that produces an error.",0,[[["error",3]]]],[11,"write","","Sequence a `write` operation.",0,[[]]],[11,"write_error","","Sequence a `write` operation that produces an error.",0,[[["error",3]]]],[11,"wait","","Sequence a wait.",0,[[["duration",3]]]],[11,"build","","Build a `Mock` value according to the defined script.",0,[[],["mock",3]]],[11,"build_with_handle","","Build a `Mock` value paired with a handle",0,[[]]],[11,"read","","Sequence a `read` operation.",1,[[]]],[11,"read_error","","Sequence a `read` operation error.",1,[[["error",3]]]],[11,"write","","Sequence a `write` operation.",1,[[]]],[11,"write_error","","Sequence a `write` operation error.",1,[[["error",3]]]],[0,"task","tokio_test","Futures task based helpers",null,null],[3,"Spawn","tokio_test::task","Future spawned on a mock task",null,null],[5,"spawn","","TOOD: dox",null,[[],["spawn",3]]],[11,"into_inner","","Consumes `self` returning the inner value",2,[[]]],[11,"is_woken","","Returns `true` if the inner future has received a wake…",2,[[]]],[11,"waker_ref_count","","Returns the number of references to the task waker",2,[[]]],[11,"enter","","Enter the task context",2,[[]]],[11,"poll","","Polls a future",2,[[],["poll",4]]],[11,"poll_next","","Polls a stream",2,[[],[["poll",4],["option",4]]]],[14,"assert_ready","tokio_test","Asserts a `Poll` is ready, returning the value.",null,null],[14,"assert_ready_ok","","Asserts a `Poll<Result<...>>` is ready and `Ok`, returning…",null,null],[14,"assert_ready_err","","Asserts a `Poll<Result<...>>` is ready and `Err`,…",null,null],[14,"assert_pending","","Asserts a `Poll` is pending.",null,null],[14,"assert_ready_eq","","Asserts if a poll is ready and check for equality on the…",null,null],[14,"assert_ok","","Asserts that the expression evaluates to `Ok` and returns…",null,null],[14,"assert_err","","Asserts that the expression evaluates to `Err` and returns…",null,null],[11,"from","tokio_test::io","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tokio_test::task","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_poll","","",2,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",2,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"load","","",2,[[]]],[11,"load","","",2,[[],["dynguard",3]]],[11,"clone","tokio_test::io","",0,[[],["builder",3]]],[11,"default","","",0,[[],["builder",3]]],[11,"deref","tokio_test::task","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","tokio_test::io","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_test::task","",2,[[["formatter",3]],["result",6]]],[11,"poll","","",2,[[["context",3],["pin",3]],["poll",4]]],[11,"poll_read","tokio_test::io","",3,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",3,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_buf","","",3,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",3,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",3,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_next","tokio_test::task","",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]]],"p":[[3,"Builder"],[3,"Handle"],[3,"Spawn"],[3,"Mock"]]},\
"tokio_util":{"doc":"Utilities for working with Tokio.","i":[[0,"codec","tokio_util","Adaptors from AsyncRead/AsyncWrite to Stream/Sink",null,null],[3,"BytesCodec","tokio_util::codec","A simple [`Decoder`] and [`Encoder`] implementation that…",null,null],[3,"Framed","","A unified [`Stream`] and [`Sink`] interface to an…",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed…",null,null],[12,"io","","The inner transport used to read bytes to and write bytes to",0,null],[12,"codec","","The codec",0,null],[12,"read_buf","","The buffer with read but unprocessed data.",0,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",0,null],[3,"FramedRead","","A [`Stream`] of messages decoded from an [`AsyncRead`].",null,null],[3,"FramedWrite","","A [`Sink`] of frames encoded to an `AsyncWrite`.",null,null],[3,"LinesCodec","","A simple [`Decoder`] and [`Encoder`] implementation that…",null,null],[4,"LinesCodecError","","An error occured while encoding or decoding a line.",null,null],[13,"MaxLineLengthExceeded","","The maximum line length was exceeded.",1,null],[13,"Io","","An IO error occured.",1,null],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],["bytescodec",3]]],[11,"new","","Provides a [`Stream`] and [`Sink`] interface for reading…",3,[[],["framed",3]]],[11,"with_capacity","","Provides a [`Stream`] and [`Sink`] interface for reading…",3,[[],["framed",3]]],[11,"from_parts","","Provides a [`Stream`] and [`Sink`] interface for reading…",3,[[["framedparts",3]],["framed",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",3,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",3,[[]]],[11,"codec","","Returns a reference to the underlying codec wrapped by…",3,[[]]],[11,"codec_mut","","Returns a mutable reference to the underlying codec…",3,[[]]],[11,"read_buffer","","Returns a reference to the read buffer.",3,[[],["bytesmut",3]]],[11,"read_buffer_mut","","Returns a mutable reference to the read buffer.",3,[[],["bytesmut",3]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",3,[[]]],[11,"into_parts","","Consumes the `Framed`, returning its underlying I/O…",3,[[],["framedparts",3]]],[11,"new","","Create a new, default, `FramedParts`",0,[[],["framedparts",3]]],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",4,[[],["framedread",3]]],[11,"with_capacity","","Creates a new `FramedRead` with the given `decoder` and a…",4,[[],["framedread",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",4,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",4,[[]]],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O…",4,[[]]],[11,"decoder","","Returns a reference to the underlying decoder.",4,[[]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",4,[[]]],[11,"read_buffer","","Returns a reference to the read buffer.",4,[[],["bytesmut",3]]],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",5,[[],["framedwrite",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",5,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",5,[[]]],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O…",5,[[]]],[11,"encoder","","Returns a reference to the underlying encoder.",5,[[]]],[11,"encoder_mut","","Returns a mutable reference to the underlying encoder.",5,[[]]],[0,"length_delimited","","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_util::codec::length_delimited","Configure length delimited `LengthDelimitedCodec`s.",null,null],[3,"LengthDelimitedCodecError","","An error when the number of bytes read is more than max…",null,null],[3,"LengthDelimitedCodec","","A codec for frames delimited by a frame head specifying…",null,null],[11,"new","","Creates a new `LengthDelimitedCodec` with the default…",6,[[]]],[11,"builder","","Creates a new length delimited codec builder with default…",6,[[],["builder",3]]],[11,"max_frame_length","","Returns the current max frame setting",6,[[]]],[11,"set_max_frame_length","","Updates the max frame setting.",6,[[]]],[11,"new","","Creates a new length delimited codec builder with default…",7,[[],["builder",3]]],[11,"big_endian","","Read the length field as a big endian integer",7,[[]]],[11,"little_endian","","Read the length field as a little endian integer",7,[[]]],[11,"native_endian","","Read the length field as a native endian integer",7,[[]]],[11,"max_frame_length","","Sets the max frame length",7,[[]]],[11,"length_field_length","","Sets the number of bytes used to represent the length field",7,[[]]],[11,"length_field_offset","","Sets the number of bytes in the header before the length…",7,[[]]],[11,"length_adjustment","","Delta between the payload length specified in the header…",7,[[]]],[11,"num_skip","","Sets the number of bytes to skip before reading the payload",7,[[]]],[11,"new_codec","","Create a configured length delimited `LengthDelimitedCodec`",7,[[],["lengthdelimitedcodec",3]]],[11,"new_read","","Create a configured length delimited `FramedRead`",7,[[],[["framedread",3],["lengthdelimitedcodec",3]]]],[11,"new_write","","Create a configured length delimited `FramedWrite`",7,[[],[["lengthdelimitedcodec",3],["framedwrite",3]]]],[11,"new_framed","","Create a configured length delimited `Framed`",7,[[],[["lengthdelimitedcodec",3],["framed",3]]]],[11,"new","tokio_util::codec","Returns a `LinesCodec` for splitting up data into lines.",8,[[],["linescodec",3]]],[11,"new_with_max_length","","Returns a `LinesCodec` with a maximum line length limit.",8,[[]]],[11,"max_length","","Returns the maximum line length when decoding.",8,[[]]],[8,"Decoder","","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",9,null],[16,"Error","","The type of unrecoverable frame decoding errors.",9,null],[10,"decode","","Attempts to decode a frame from the provided buffer of…",9,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"decode_eof","","A default method available to be called when there are no…",9,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"framed","","Provides a [`Stream`] and [`Sink`] interface for reading…",9,[[["sized",8],["asyncread",8],["asyncwrite",8]],[["sized",8],["framed",3],["asyncread",8],["asyncwrite",8]]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes,…",null,null],[16,"Error","","The type of encoding errors.",10,null],[10,"encode","","Encodes a frame into the buffer provided.",10,[[["bytesmut",3]],["result",4]]],[0,"udp","tokio_util","UDP framing",null,null],[3,"UdpFramed","tokio_util::udp","A unified `Stream` and `Sink` interface to an underlying…",null,null],[11,"new","","Create a new `UdpFramed` backed by the given socket and…",11,[[["udpsocket",3]],["udpframed",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",11,[[],["udpsocket",3]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",11,[[],["udpsocket",3]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",11,[[],["udpsocket",3]]],[0,"compat","tokio_util","Compatibility between the `tokio::io` and `futures-io`…",null,null],[3,"Compat","tokio_util::compat","A compatibility layer that allows conversion between the…",null,null],[8,"FuturesAsyncReadCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat","","Wraps `self` with a compatibility layer that implements…",12,[[],["compat",3]]],[8,"FuturesAsyncWriteCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat_write","","Wraps `self` with a compatibility layer that implements…",13,[[],["compat",3]]],[8,"Tokio02AsyncReadCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat","","Wraps `self` with a compatibility layer that implements…",14,[[],["compat",3]]],[8,"Tokio02AsyncWriteCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat_write","","Wraps `self` with a compatibility layer that implements…",15,[[],["compat",3]]],[11,"get_ref","","Get a reference to the `Future`, `Stream`, `AsyncRead`, or…",16,[[]]],[11,"get_mut","","Get a mutable reference to the `Future`, `Stream`,…",16,[[]]],[11,"into_inner","","Returns the wrapped item.",16,[[]]],[11,"from","tokio_util::codec","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"try_poll_next","","",3,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_poll_next","","",4,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tokio_util::codec::length_delimited","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","tokio_util::udp","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"try_poll_next","","",11,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","tokio_util::compat","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"decode","tokio_util::codec","",2,[[["bytesmut",3]],[["result",4],["error",3],["option",4]]]],[11,"decode","tokio_util::codec::length_delimited","",6,[[["bytesmut",3]],[["result",6],["option",4]]]],[11,"decode","tokio_util::codec","",8,[[["bytesmut",3]],[["result",4],["linescodecerror",4],["option",4]]]],[11,"decode_eof","","",8,[[["bytesmut",3]],[["result",4],["linescodecerror",4],["option",4]]]],[11,"encode","","",2,[[["bytes",3],["bytesmut",3]],[["error",3],["result",4]]]],[11,"encode","tokio_util::codec::length_delimited","",6,[[["bytes",3],["bytesmut",3]],[["error",3],["result",4]]]],[11,"encode","tokio_util::codec","",8,[[["bytesmut",3]],[["linescodecerror",4],["result",4]]]],[11,"from","","",1,[[["error",3]],["linescodecerror",4]]],[11,"clone","","",2,[[],["bytescodec",3]]],[11,"clone","tokio_util::codec::length_delimited","",7,[[],["builder",3]]],[11,"clone","tokio_util::codec","",8,[[],["linescodec",3]]],[11,"clone","tokio_util::compat","",16,[[],["compat",3]]],[11,"default","tokio_util::codec","",2,[[],["bytescodec",3]]],[11,"default","tokio_util::codec::length_delimited","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","tokio_util::codec","",8,[[]]],[11,"cmp","","",2,[[["bytescodec",3]],["ordering",4]]],[11,"cmp","","",8,[[["linescodec",3]],["ordering",4]]],[11,"eq","","",2,[[["bytescodec",3]]]],[11,"ne","","",2,[[["bytescodec",3]]]],[11,"eq","","",8,[[["linescodec",3]]]],[11,"ne","","",8,[[["linescodec",3]]]],[11,"partial_cmp","","",2,[[["bytescodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["bytescodec",3]]]],[11,"le","","",2,[[["bytescodec",3]]]],[11,"gt","","",2,[[["bytescodec",3]]]],[11,"ge","","",2,[[["bytescodec",3]]]],[11,"partial_cmp","","",8,[[["linescodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["linescodec",3]]]],[11,"le","","",8,[[["linescodec",3]]]],[11,"gt","","",8,[[["linescodec",3]]]],[11,"ge","","",8,[[["linescodec",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec::length_delimited","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::udp","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::compat","",16,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec::length_delimited","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",8,[[]]],[11,"poll_read","tokio_util::compat","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_fill_buf","","",16,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",16,[[["pin",3]]]],[11,"poll_next","tokio_util::codec","",3,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",4,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",5,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio_util::udp","",11,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_ready","tokio_util::codec","",3,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",3,[[["pin",3]],["result",4]]],[11,"poll_flush","","",3,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",3,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",4,[[["pin",3]],["result",4]]],[11,"poll_flush","","",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",5,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",5,[[["pin",3]],["result",4]]],[11,"poll_flush","","",5,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",5,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","tokio_util::udp","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",11,[[["pin",3]],["result",4]]],[11,"poll_flush","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_read","tokio_util::compat","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",16,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_fill_buf","","",16,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",16,[[["pin",3]]]],[11,"decode_eof","tokio_util::codec","A default method available to be called when there are no…",9,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"framed","","Provides a [`Stream`] and [`Sink`] interface for reading…",9,[[["sized",8],["asyncread",8],["asyncwrite",8]],[["sized",8],["framed",3],["asyncread",8],["asyncwrite",8]]]]],"p":[[3,"FramedParts"],[4,"LinesCodecError"],[3,"BytesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"LengthDelimitedCodec"],[3,"Builder"],[3,"LinesCodec"],[8,"Decoder"],[8,"Encoder"],[3,"UdpFramed"],[8,"FuturesAsyncReadCompatExt"],[8,"FuturesAsyncWriteCompatExt"],[8,"Tokio02AsyncReadCompatExt"],[8,"Tokio02AsyncWriteCompatExt"],[3,"Compat"],[3,"LengthDelimitedCodecError"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);